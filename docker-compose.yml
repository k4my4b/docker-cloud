services:
  nextcloud:
    build:
      context: ./nextcloud
    container_name: nextcloud-fpm
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      clamav:
        condition: service_healthy
    networks:
      - nextcloud
    volumes:
      - nextcloud:/var/www/html
    env_file:
      - db.env
      - nc.env

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: unless-stopped
    stop_grace_period: 1800s
    networks:
      - nextcloud
    volumes:
      - postgres:/var/lib/postgresql/data:Z
    env_file:
      - db.env
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -t 1
      interval: 5s
      timeout: 10s
      retries: 120

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - nextcloud
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    restart: unless-stopped
    depends_on:
      nextcloud:
        condition: service_healthy
    networks:
      - nextcloud
    ports:
      - 8080:80
    volumes:
      - nextcloud:/var/www/html:ro
    healthcheck:
      test: curl -fsL localhost | grep nextcloud
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 15s
  
  clamav:
    image: clamav/clamav:stable
    container_name: clamav
    restart: unless-stopped
    networks:
      - nextcloud

volumes:
  nextcloud:
    name: nextcloud
  postgres:
    name: postgres

networks:
  nextcloud:
    name: nextcloud-network
