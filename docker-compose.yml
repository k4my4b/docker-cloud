volumes:
  nextcloud:
    name: nextcloud
  nextcloud-apps:
    name: nextcloud-apps
  nextcloud-data:
    name: nextcloud-data
  postgres:
    name: postgres

networks:
  nextcloud:
    name: nextcloud-network

services:
  nextcloud:
    build:
      context: ./nextcloud
    container_name: nextcloud
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      imaginary:
        condition: service_healthy
    networks:
      - nextcloud
    ports:
      - 80:80
    volumes:
      - nextcloud:/usr/share/webapps/nextcloud
      - nextcloud-apps:/var/lib/nextcloud/apps
      - nextcloud-data:/var/lib/nextcloud/data
    environment:
      NEXTCLOUD_ADMIN_USER: "${NEXTCLOUD_ADMIN_USER}"
      NEXTCLOUD_ADMIN_PASSWORD: "${NEXTCLOUD_ADMIN_PASSWORD}"
      ENFORCE_TWOFACTORAUTH: "${ENFORCE_TWOFACTORAUTH}"
      NEXTCLOUD_TRUSTED_DOMAINS: "${NEXTCLOUD_TRUSTED_DOMAINS}"
      OVERWRITEPROTOCOL: "${OVERWRITEPROTOCOL}"
      OVERWRITECLIURL: "${OVERWRITECLIURL}"
      OVERWRITEHOST: "${OVERWRITEHOST}"
      TRUSTED_PROXIES: "${TRUSTED_PROXIES}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      FTS_PASSWORD: "${ELASTIC_PASSWORD}"
      SMTP_HOST: "${SMTP_HOST}"
      SMTP_SECURE: "${SMTP_SECURE}"
      SMTP_PORT: "${SMTP_PORT}"
      SMTP_AUTHTYPE: "${SMTP_AUTHTYPE}"
      SMTP_NAME: "${SMTP_NAME}"
      SMTP_PASSWORD: "${SMTP_PASSWORD}"
      MAIL_FROM_ADDRESS: "${MAIL_FROM_ADDRESS}"
      MAIL_DOMAIN: "${MAIL_DOMAIN}"

  postgres:
    image: postgres:15.6-alpine
    container_name: postgres
    restart: unless-stopped
    stop_grace_period: 1800s
    networks:
      - nextcloud
    volumes:
      - postgres:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: nextcloud 
      POSTGRES_USER: nextcloud
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -t 1
      interval: 5s
      timeout: 10s
      retries: 120

  redis:
    image: valkey/valkey:alpine3.19
    container_name: redis
    restart: unless-stopped
    networks:
      - nextcloud
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  imaginary:
    image: nextcloud/aio-imaginary:latest
    container_name: imaginary
    restart: unless-stopped
    networks:
      - nextcloud
