# If we receive X-Forwarded-Proto, pass it through; otherwise, use the scheme
# (http/https) used to connect to this server.
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  '' $scheme;
}

# If we receive X-Forwarded-Port, pass it through; otherwise, use the port the
# client connected to (e.g., 80 for HTTP or 443 for HTTPS).
map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  '' $server_port;
}

# If we receive an Upgrade header (e.g., for WebSockets), set the Connection
# header to "upgrade". Otherwise, close the connection by setting it to "close".
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

# Set the X-Forwarded-Ssl header to "on" if the request is via HTTPS, otherwise "off".
map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}

# Define the proxy cache path for Nginx. The cache will be stored at /var/cache/nginx/cache
# with a hierarchical structure (levels=1:2) for file storage. We are allocating 10 MB of
# shared memory for the cache key metadata. Cached content will be evicted if inactive for
# 60 minutes. Using `use_temp_path=off` improves performance by writing cache content
# directly to the final location instead of using temporary storage.
proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=cache:10m inactive=60m use_temp_path=off;

# Define the cache key used for caching the responses. The cache key is a combination of
# scheme, request method, host, and URI to ensure different variations are cached separately.
proxy_cache_key "$scheme$request_method$host$request_uri";

server {
    listen 80;
    listen 443 ssl http2;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    # Only allow modern TLS versions to ensure secure connections.
    # TLSv1.0 and TLSv1.1 are disabled due to vulnerabilities.
    ssl_protocols TLSv1.2 TLSv1.3;

    # Use strong ciphers, excluding weak ciphers like aNULL (anonymous Diffie-Hellman)
    # and MD5, which are not considered secure.
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Enable HSTS to enforce HTTPS for a year with subdomains.
    # Prevents browsers from downgrading requests to HTTP.
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Set various proxy headers for the upstream server.
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $proxy_connection;
    proxy_set_header X-Real-IP $remote_addr;  # Pass client IP address
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chain client IPs for upstream
    proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
    proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
    proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;

    # Mitigate HTTPoxy vulnerability (CVE-2016-5385). HTTP Proxy headers can cause security issues.
    proxy_set_header Proxy "";

    # Enable HTTP/1.1 features like keepalive, chunked transfer, and pipelining.
    proxy_http_version 1.1;

    # Disable buffering to avoid response delays for proxied applications
    # that stream large data, such as WebSockets or long-polling APIs.
    proxy_buffering off;

    # Set appropriate timeouts to handle slow client connections or long-running requests.
    proxy_connect_timeout 10s;  # Max time to connect to upstream server
    proxy_send_timeout 3600s;   # Max time for sending data to the upstream server
    proxy_read_timeout 3600s;   # Max time for reading data from the upstream server
    send_timeout 3600s;         # Max time for transmitting data to the client

    # Enable caching for static responses (like GET requests). Cache 200 OK responses
    # for 10 minutes to improve performance.
    proxy_cache cache;
    proxy_cache_valid 200 10m;

    # Hide potentially sensitive headers from the client to prevent disclosure of
    # internal infrastructure information.
    proxy_hide_header X-Powered-By;
    proxy_hide_header X-AspNet-Version;
    proxy_hide_header X-Backend-Server;
    proxy_hide_header Server;

    # Disable the max body size limit to allow uploads of any size. Set to a specific
    # value like "10M" if you want to limit the upload size.
    client_max_body_size 0;

    # Turn off the server tokens, which prevents the Nginx version from being
    # disclosed in error pages and headers.
    server_tokens off;

    # Handle WebSocket connections for Nextcloud push notifications
    location ^~ /push/ {
        proxy_pass http://${PUSH_HOST}:${PUSH_PORT}/;
        # Ensure WebSocket headers are passed correctly
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Proxy other requests to the main Nextcloud service.
    location / {
        proxy_pass http://${NC_HOST}:${NC_PORT}/;
    }
}
